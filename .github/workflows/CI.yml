name: CI
on:
  pull_request:
  push:
    branches:
      - master

jobs:
  Test:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    name: ${{ matrix.os }} - Atom ${{ matrix.atom_channel }} - PHP ${{ matrix.php_version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        atom_channel: [stable, beta]
        php_version: ['5.6', '7.4', '8.0']
        phpcs_version: '*'

        include:
            # PHPCS v1.* only supports up to PHP 7.2
          - os: ubuntu-latest
            atom_channel: stable
            php_version: '7.2'
            phpcs_version: '1.*'

            # PHPCS v2.* only supports up to PHP 7.2
          - os: ubuntu-latest
            atom_channel: stable
            php_version: '7.2'
            phpcs_version: '2.*'

            # PHPCS v3.* only supports up to PHP 7.2
          - os: ubuntu-latest
            atom_channel: stable
            php_version: '7.2'
            phpcs_version: '3.*'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Atom ${{ matrix.atom_channel }}
        uses: UziTech/action-setup-atom@v1
        with:
          channel: ${{ matrix.atom_channel }}
      - name: Install PHP ${{ matrix.php_version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php_version }}
      - name: Install PHPCS
        run: composer global require "squizlabs/php_codesniffer ${{ matrix.phpcs_version }}"
      - name: Versions
        run: |
          atom -v
          apm -v
          php -v
          phpcs --version
      - name: Install dependencies
        run: apm install
      - name: Run tests üë©üèæ‚Äçüíª
        run: npm run test

  Lint:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: UziTech/action-setup-atom@v1
      - name: Install dependencies
        run: npm install
      - name: Lint ‚ú®
        run: npm run test.lint

  CommitLint:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Commit lint ‚ú®
        uses: wagoid/commitlint-github-action@v3

  Release:
    needs: [Test, CommitLint, Lint]
    if: github.ref == 'refs/heads/master' &&
      github.event.repository.fork == false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: UziTech/action-setup-atom@v1
      - name: NPM install
        run: npm install
      - name: Release üéâ
        uses: cycjimmy/semantic-release-action@v2
        with:
          extends: |
            @semantic-release/apm-config
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ATOM_ACCESS_TOKEN: ${{ secrets.ATOM_ACCESS_TOKEN  }}

  Skip:
    if: contains(github.event.head_commit.message, '[skip ci]')
    runs-on: ubuntu-latest
    steps:
      - name: Skip CI üö´
        run: echo skip ci
